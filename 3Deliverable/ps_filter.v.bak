module ps_filter #(
	parameter DATA_WIDTH = 18,
	parameter LENGTH = 1		// length of filter
	)(
	input reset, sam_clk_en, sym_clk_en, sys_clk, SW,
	input signed[DATA_WIDTH-1:0] x_in,
	output reg signed[DATA_WIDTH-1:0] y_ps
	);	

integer i;
(* keep *)reg signed [DATA_WIDTH-1:0]	b1[LENGTH-1:0];	
(* keep *)reg signed [DATA_WIDTH-1:0]	b2[LENGTH-1:0];		 
(* keep *)reg signed [DATA_WIDTH-1:0]	x[LENGTH-1:0];	
(* preserve *)reg signed [DATA_WIDTH-1:0] mult_out[LENGTH-1:0];
(* preserve *)reg signed [DATA_WIDTH-1:0] sum_level_1[52:0];
(* preserve *)reg signed [DATA_WIDTH-1:0] sum_level_2[26:0];
(* preserve *)reg signed [DATA_WIDTH-1:0] sum_level_3[13:0];
(* keep *)reg signed [DATA_WIDTH-1:0] sum_level_4[6:0];
(* keep *)reg signed [DATA_WIDTH-1:0] sum_level_5[3:0];
(* keep *)reg signed [DATA_WIDTH-1:0] sum_level_6[1:0];
(* preserve *)reg signed [DATA_WIDTH-1:0] sum_level_7;

always @ (posedge sys_clk)
	if (reset)
		x[0] <= 18'sd0;
	else if (sam_clk_en)
		x[0] <= x_in;

// chain of 105 registers to cycle through x_in at each sample clk
always @ (posedge sys_clk)
	if (reset)
		begin
			for(i=1; i<LENGTH; i = i+1)
				x[i] <= 18'sd0;
			end
	else if (sam_clk_en)
//	else
		begin
			for(i=1; i<LENGTH; i = i+1)
				x[i] <= x[i-1];
		end
		
// mult out, no multipliers, a = 0.25
always @ *
	for(i = 0; i<= LENGTH-1; i = i+1)
		case(x[i])
			 -18'sd98302: mult_out[i] = b1[i];
			 -18'sd32767: mult_out[i] = b2[i];
			 18'sd32767: mult_out[i] = -b2[i];
			 18'sd98302: mult_out[i] = -b1[i];
			 default: mult_out[i] = 18'sd0;
		 endcase
		 
		 
//sum the registers with common coefficients
always @ (posedge sys_clk)
if (sam_clk_en)
	for(i=0;i<=51;i=i+1)
		sum_level_1[i] <= $signed(mult_out[i]) + $signed(mult_out[LENGTH -1 -i]);

//Since the total number of registers is odd, this is the center reg
always @ (posedge sys_clk)
if (sam_clk_en)
	sum_level_1[52] <= mult_out[52];
	
// sums from x[0] to x[n-51]
always @ (posedge sys_clk)
if (sam_clk_en)
	for(i=0;i<=25;i=i+1)
		sum_level_2[i] <= $signed(sum_level_1[2*i]) + $signed(sum_level_1[2*i+1]);

// sum level 2 for center tap
always @ (posedge sys_clk)
if (sam_clk_en)
	sum_level_2[26] <= $signed(sum_level_1[52]);

// sum the third row of adders

always @ (posedge sys_clk)
	if (reset)
		for(i=0;i<=12;i=i+1)
			sum_level_3[i] <= 18'sd0;
	else if (sam_clk_en)					// add pipelining
		for(i=0;i<=12;i=i+1)
			sum_level_3[i] <= $signed(sum_level_2[2*i]) + $signed(sum_level_2[2*i+1]);

// sum level 3 for center tap
always @ (posedge sys_clk)
	if (reset)
		sum_level_3[13] <= 1'sd0;
	else if (sam_clk_en)
		sum_level_3[13] <= $signed(sum_level_2[26]);

// sum the fourth row of adders
always @ (posedge sys_clk)
if (sam_clk_en)
	for(i=0;i<=6;i=i+1)
		sum_level_4[i] <= $signed(sum_level_3[2*i]) + $signed(sum_level_3[2*i+1]);

	
// sum the fifth row of adders
always @ (posedge sys_clk)
if (sam_clk_en)
	for(i=0;i<=2;i=i+1)
		sum_level_5[i] <= $signed(sum_level_4[2*i]) + $signed(sum_level_4[2*i+1]);
always @ (posedge sys_clk)
if (sam_clk_en)
	sum_level_5[3] <= $signed(sum_level_4[6]);

// sum the sixth row of adders
always @ (posedge sys_clk)
if (sam_clk_en)
	sum_level_6[0] <= $signed(sum_level_5[0]) + $signed(sum_level_5[1]);

always @ (posedge sys_clk)
if (sam_clk_en)
	sum_level_6[1] <= $signed(sum_level_5[2]) + $signed(sum_level_5[3]);
	
	
// sum the seventh row of adders
always @ (posedge sys_clk)
if (sam_clk_en)
	sum_level_7 <= $signed(sum_level_6[0]) + $signed(sum_level_6[1]);
	
	
// output y
always @ (posedge sys_clk)
	if (reset)
		y_ps <= 18'sd0;
	else if (sam_clk_en)
		y_ps <= sum_level_7;
	

// mult_out values depending on input x
// SW = 0 >> prac
// SW = 1 >> gs
always @*
	case(SW)
		1'b0: begin	// practical pulse shaping filter
			b1[0] = -18'sd20;
			b1[1] = -18'sd113;
			b1[2] = -18'sd122;
			b1[3] = -18'sd119;
			b1[4] = -18'sd50;
			b1[5] = 18'sd56;
			b1[6] = 18'sd146;
			b1[7] = 18'sd161;
			b1[8] = 18'sd74;
			b1[9] = -18'sd83;
			b1[10] = -18'sd223;
			b1[11] = -18'sd248;
			b1[12] = -18'sd119;
			b1[13] = 18'sd115;
			b1[14] = 18'sd322;
			b1[15] = 18'sd362;
			b1[16] = 18'sd177;
			b1[17] = -18'sd156;
			b1[18] = -18'sd449;
			b1[19] = -18'sd505;
			b1[20] = -18'sd247;
			b1[21] = 18'sd212;
			b1[22] = 18'sd610;
			b1[23] = 18'sd680;
			b1[24] = 18'sd324;
			b1[25] = -18'sd293;
			b1[26] = -18'sd815;
			b1[27] = -18'sd892;
			b1[28] = -18'sd406;
			b1[29] = 18'sd413;
			b1[30] = 18'sd1085;
			b1[31] = 18'sd1155;
			b1[32] = 18'sd487;
			b1[33] = -18'sd598;
			b1[34] = -18'sd1457;
			b1[35] = -18'sd1498;
			b1[36] = -18'sd562;
			b1[37] = 18'sd898;
			b1[38] = 18'sd2013;
			b1[39] = 18'sd1988;
			b1[40] = 18'sd627;
			b1[41] = -18'sd1434;
			b1[42] = -18'sd2969;
			b1[43] = -18'sd2828;
			b1[44] = -18'sd677;
			b1[45] = 18'sd2596;
			b1[46] = 18'sd5119;
			b1[47] = 18'sd4865;
			b1[48] = 18'sd708;
			b1[49] = -18'sd6837;
			b1[50] = -18'sd15614;
			b1[51] = -18'sd22623;
			b1[52] = -18'sd25295;
			b1[53] = -18'sd22623;
			b1[54] = -18'sd15614;
			b1[55] = -18'sd6837;
			b1[56] = 18'sd708;
			b1[57] = 18'sd4865;
			b1[58] = 18'sd5119;
			b1[59] = 18'sd2596;
			b1[60] = -18'sd677;
			b1[61] = -18'sd2828;
			b1[62] = -18'sd2969;
			b1[63] = -18'sd1434;
			b1[64] = 18'sd627;
			b1[65] = 18'sd1988;
			b1[66] = 18'sd2013;
			b1[67] = 18'sd898;
			b1[68] = -18'sd562;
			b1[69] = -18'sd1498;
			b1[70] = -18'sd1457;
			b1[71] = -18'sd598;
			b1[72] = 18'sd487;
			b1[73] = 18'sd1155;
			b1[74] = 18'sd1085;
			b1[75] = 18'sd413;
			b1[76] = -18'sd406;
			b1[77] = -18'sd892;
			b1[78] = -18'sd815;
			b1[79] = -18'sd293;
			b1[80] = 18'sd324;
			b1[81] = 18'sd680;
			b1[82] = 18'sd610;
			b1[83] = 18'sd212;
			b1[84] = -18'sd247;
			b1[85] = -18'sd505;
			b1[86] = -18'sd449;
			b1[87] = -18'sd156;
			b1[88] = 18'sd177;
			b1[89] = 18'sd362;
			b1[90] = 18'sd322;
			b1[91] = 18'sd115;
			b1[92] = -18'sd119;
			b1[93] = -18'sd248;
			b1[94] = -18'sd223;
			b1[95] = -18'sd83;
			b1[96] = 18'sd74;
			b1[97] = 18'sd161;
			b1[98] = 18'sd146;
			b1[99] = 18'sd56;
			b1[100] = -18'sd50;
			b1[101] = -18'sd119;
			b1[102] = -18'sd122;
			b1[103] = -18'sd113;
			b1[104] = -18'sd20;
			b2[0] = -18'sd7;
			b2[1] = -18'sd38;
			b2[2] = -18'sd41;
			b2[3] = -18'sd40;
			b2[4] = -18'sd17;
			b2[5] = 18'sd19;
			b2[6] = 18'sd49;
			b2[7] = 18'sd54;
			b2[8] = 18'sd25;
			b2[9] = -18'sd28;
			b2[10] = -18'sd74;
			b2[11] = -18'sd83;
			b2[12] = -18'sd40;
			b2[13] = 18'sd38;
			b2[14] = 18'sd107;
			b2[15] = 18'sd121;
			b2[16] = 18'sd59;
			b2[17] = -18'sd52;
			b2[18] = -18'sd150;
			b2[19] = -18'sd168;
			b2[20] = -18'sd82;
			b2[21] = 18'sd71;
			b2[22] = 18'sd203;
			b2[23] = 18'sd227;
			b2[24] = 18'sd108;
			b2[25] = -18'sd98;
			b2[26] = -18'sd272;
			b2[27] = -18'sd297;
			b2[28] = -18'sd135;
			b2[29] = 18'sd138;
			b2[30] = 18'sd362;
			b2[31] = 18'sd385;
			b2[32] = 18'sd162;
			b2[33] = -18'sd199;
			b2[34] = -18'sd486;
			b2[35] = -18'sd499;
			b2[36] = -18'sd187;
			b2[37] = 18'sd299;
			b2[38] = 18'sd671;
			b2[39] = 18'sd663;
			b2[40] = 18'sd209;
			b2[41] = -18'sd478;
			b2[42] = -18'sd990;
			b2[43] = -18'sd943;
			b2[44] = -18'sd226;
			b2[45] = 18'sd865;
			b2[46] = 18'sd1706;
			b2[47] = 18'sd1622;
			b2[48] = 18'sd236;
			b2[49] = -18'sd2279;
			b2[50] = -18'sd5205;
			b2[51] = -18'sd7541;
			b2[52] = -18'sd8432;
			b2[53] = -18'sd7541;
			b2[54] = -18'sd5205;
			b2[55] = -18'sd2279;
			b2[56] = 18'sd236;
			b2[57] = 18'sd1622;
			b2[58] = 18'sd1706;
			b2[59] = 18'sd865;
			b2[60] = -18'sd226;
			b2[61] = -18'sd943;
			b2[62] = -18'sd990;
			b2[63] = -18'sd478;
			b2[64] = 18'sd209;
			b2[65] = 18'sd663;
			b2[66] = 18'sd671;
			b2[67] = 18'sd299;
			b2[68] = -18'sd187;
			b2[69] = -18'sd499;
			b2[70] = -18'sd486;
			b2[71] = -18'sd199;
			b2[72] = 18'sd162;
			b2[73] = 18'sd385;
			b2[74] = 18'sd362;
			b2[75] = 18'sd138;
			b2[76] = -18'sd135;
			b2[77] = -18'sd297;
			b2[78] = -18'sd272;
			b2[79] = -18'sd98;
			b2[80] = 18'sd108;
			b2[81] = 18'sd227;
			b2[82] = 18'sd203;
			b2[83] = 18'sd71;
			b2[84] = -18'sd82;
			b2[85] = -18'sd168;
			b2[86] = -18'sd150;
			b2[87] = -18'sd52;
			b2[88] = 18'sd59;
			b2[89] = 18'sd121;
			b2[90] = 18'sd107;
			b2[91] = 18'sd38;
			b2[92] = -18'sd40;
			b2[93] = -18'sd83;
			b2[94] = -18'sd74;
			b2[95] = -18'sd28;
			b2[96] = 18'sd25;
			b2[97] = 18'sd54;
			b2[98] = 18'sd49;
			b2[99] = 18'sd19;
			b2[100] = -18'sd17;
			b2[101] = -18'sd40;
			b2[102] = -18'sd41;
			b2[103] = -18'sd38;
			b2[104] = -18'sd7;
			end
		1'b1: begin		// GS pulse shaping filter

// a = 0.5		
b1[0] = -18'sd77;
b1[1] = -18'sd59;
b1[2] = 18'sd11;
b1[3] = 18'sd83;
b1[4] = 18'sd96;
b1[5] = 18'sd35;
b1[6] = -18'sd63;
b1[7] = -18'sd123;
b1[8] = -18'sd95;
b1[9] = 18'sd9;
b1[10] = 18'sd116;
b1[11] = 18'sd143;
b1[12] = 18'sd63;
b1[13] = -18'sd69;
b1[14] = -18'sd156;
b1[15] = -18'sd126;
b1[16] = 18'sd3;
b1[17] = 18'sd134;
b1[18] = 18'sd161;
b1[19] = 18'sd54;
b1[20] = -18'sd107;
b1[21] = -18'sd188;
b1[22] = -18'sd105;
b1[23] = 18'sd92;
b1[24] = 18'sd246;
b1[25] = 18'sd209;
b1[26] = -18'sd39;
b1[27] = -18'sd327;
b1[28] = -18'sd414;
b1[29] = -18'sd164;
b1[30] = 18'sd308;
b1[31] = 18'sd672;
b1[32] = 18'sd597;
b1[33] = 18'sd14;
b1[34] = -18'sd755;
b1[35] = -18'sd1158;
b1[36] = -18'sd779;
b1[37] = 18'sd309;
b1[38] = 18'sd1473;
b1[39] = 18'sd1854;
b1[40] = 18'sd945;
b1[41] = -18'sd945;
b1[42] = -18'sd2697;
b1[43] = -18'sd2967;
b1[44] = -18'sd1077;
b1[45] = 18'sd2328;
b1[46] = 18'sd5295;
b1[47] = 18'sd5427;
b1[48] = 18'sd1161;
b1[49] = -18'sd7172;
b1[50] = -18'sd17180;
b1[51] = -18'sd25314;
b1[52] = -18'sd28439;
b1[53] = -18'sd25314;
b1[54] = -18'sd17180;
b1[55] = -18'sd7172;
b1[56] = 18'sd1161;
b1[57] = 18'sd5427;
b1[58] = 18'sd5295;
b1[59] = 18'sd2328;
b1[60] = -18'sd1077;
b1[61] = -18'sd2967;
b1[62] = -18'sd2697;
b1[63] = -18'sd945;
b1[64] = 18'sd945;
b1[65] = 18'sd1854;
b1[66] = 18'sd1473;
b1[67] = 18'sd309;
b1[68] = -18'sd779;
b1[69] = -18'sd1158;
b1[70] = -18'sd755;
b1[71] = 18'sd14;
b1[72] = 18'sd597;
b1[73] = 18'sd672;
b1[74] = 18'sd308;
b1[75] = -18'sd164;
b1[76] = -18'sd414;
b1[77] = -18'sd327;
b1[78] = -18'sd39;
b1[79] = 18'sd209;
b1[80] = 18'sd246;
b1[81] = 18'sd92;
b1[82] = -18'sd105;
b1[83] = -18'sd188;
b1[84] = -18'sd107;
b1[85] = 18'sd54;
b1[86] = 18'sd161;
b1[87] = 18'sd134;
b1[88] = 18'sd3;
b1[89] = -18'sd126;
b1[90] = -18'sd156;
b1[91] = -18'sd69;
b1[92] = 18'sd63;
b1[93] = 18'sd143;
b1[94] = 18'sd116;
b1[95] = 18'sd9;
b1[96] = -18'sd95;
b1[97] = -18'sd123;
b1[98] = -18'sd63;
b1[99] = 18'sd35;
b1[100] = 18'sd96;
b1[101] = 18'sd83;
b1[102] = 18'sd11;
b1[103] = -18'sd59;
b1[104] = -18'sd77;
b2[0] = -18'sd26;
b2[1] = -18'sd20;
b2[2] = 18'sd4;
b2[3] = 18'sd28;
b2[4] = 18'sd32;
b2[5] = 18'sd12;
b2[6] = -18'sd21;
b2[7] = -18'sd41;
b2[8] = -18'sd32;
b2[9] = 18'sd3;
b2[10] = 18'sd39;
b2[11] = 18'sd48;
b2[12] = 18'sd21;
b2[13] = -18'sd23;
b2[14] = -18'sd52;
b2[15] = -18'sd42;
b2[16] = 18'sd1;
b2[17] = 18'sd45;
b2[18] = 18'sd54;
b2[19] = 18'sd18;
b2[20] = -18'sd36;
b2[21] = -18'sd63;
b2[22] = -18'sd35;
b2[23] = 18'sd31;
b2[24] = 18'sd82;
b2[25] = 18'sd70;
b2[26] = -18'sd13;
b2[27] = -18'sd109;
b2[28] = -18'sd138;
b2[29] = -18'sd55;
b2[30] = 18'sd103;
b2[31] = 18'sd224;
b2[32] = 18'sd199;
b2[33] = 18'sd5;
b2[34] = -18'sd252;
b2[35] = -18'sd386;
b2[36] = -18'sd260;
b2[37] = 18'sd103;
b2[38] = 18'sd491;
b2[39] = 18'sd618;
b2[40] = 18'sd315;
b2[41] = -18'sd315;
b2[42] = -18'sd899;
b2[43] = -18'sd989;
b2[44] = -18'sd359;
b2[45] = 18'sd776;
b2[46] = 18'sd1765;
b2[47] = 18'sd1809;
b2[48] = 18'sd387;
b2[49] = -18'sd2391;
b2[50] = -18'sd5727;
b2[51] = -18'sd8438;
b2[52] = -18'sd9480;
b2[53] = -18'sd8438;
b2[54] = -18'sd5727;
b2[55] = -18'sd2391;
b2[56] = 18'sd387;
b2[57] = 18'sd1809;
b2[58] = 18'sd1765;
b2[59] = 18'sd776;
b2[60] = -18'sd359;
b2[61] = -18'sd989;
b2[62] = -18'sd899;
b2[63] = -18'sd315;
b2[64] = 18'sd315;
b2[65] = 18'sd618;
b2[66] = 18'sd491;
b2[67] = 18'sd103;
b2[68] = -18'sd260;
b2[69] = -18'sd386;
b2[70] = -18'sd252;
b2[71] = 18'sd5;
b2[72] = 18'sd199;
b2[73] = 18'sd224;
b2[74] = 18'sd103;
b2[75] = -18'sd55;
b2[76] = -18'sd138;
b2[77] = -18'sd109;
b2[78] = -18'sd13;
b2[79] = 18'sd70;
b2[80] = 18'sd82;
b2[81] = 18'sd31;
b2[82] = -18'sd35;
b2[83] = -18'sd63;
b2[84] = -18'sd36;
b2[85] = 18'sd18;
b2[86] = 18'sd54;
b2[87] = 18'sd45;
b2[88] = 18'sd1;
b2[89] = -18'sd42;
b2[90] = -18'sd52;
b2[91] = -18'sd23;
b2[92] = 18'sd21;
b2[93] = 18'sd48;
b2[94] = 18'sd39;
b2[95] = 18'sd3;
b2[96] = -18'sd32;
b2[97] = -18'sd41;
b2[98] = -18'sd21;
b2[99] = 18'sd12;
b2[100] = 18'sd32;
b2[101] = 18'sd28;
b2[102] = 18'sd4;
b2[103] = -18'sd20;
b2[104] = -18'sd26;
		
		
		
		
		/*		// best so far gives 48 dB MER
b1[0] = -18'sd51;
b1[1] = -18'sd39;
b1[2] = 18'sd7;
b1[3] = 18'sd55;
b1[4] = 18'sd64;
b1[5] = 18'sd23;
b1[6] = -18'sd42;
b1[7] = -18'sd82;
b1[8] = -18'sd63;
b1[9] = 18'sd6;
b1[10] = 18'sd77;
b1[11] = 18'sd95;
b1[12] = 18'sd42;
b1[13] = -18'sd46;
b1[14] = -18'sd104;
b1[15] = -18'sd84;
b1[16] = 18'sd2;
b1[17] = 18'sd89;
b1[18] = 18'sd107;
b1[19] = 18'sd36;
b1[20] = -18'sd71;
b1[21] = -18'sd125;
b1[22] = -18'sd70;
b1[23] = 18'sd61;
b1[24] = 18'sd164;
b1[25] = 18'sd139;
b1[26] = -18'sd26;
b1[27] = -18'sd218;
b1[28] = -18'sd276;
b1[29] = -18'sd109;
b1[30] = 18'sd205;
b1[31] = 18'sd448;
b1[32] = 18'sd398;
b1[33] = 18'sd9;
b1[34] = -18'sd503;
b1[35] = -18'sd772;
b1[36] = -18'sd519;
b1[37] = 18'sd206;
b1[38] = 18'sd982;
b1[39] = 18'sd1236;
b1[40] = 18'sd630;
b1[41] = -18'sd630;
b1[42] = -18'sd1798;
b1[43] = -18'sd1978;
b1[44] = -18'sd718;
b1[45] = 18'sd1552;
b1[46] = 18'sd3530;
b1[47] = 18'sd3618;
b1[48] = 18'sd774;
b1[49] = -18'sd4781;
b1[50] = -18'sd11453;
b1[51] = -18'sd16876;
b1[52] = -18'sd18959;
b1[53] = -18'sd16876;
b1[54] = -18'sd11453;
b1[55] = -18'sd4781;
b1[56] = 18'sd774;
b1[57] = 18'sd3618;
b1[58] = 18'sd3530;
b1[59] = 18'sd1552;
b1[60] = -18'sd718;
b1[61] = -18'sd1978;
b1[62] = -18'sd1798;
b1[63] = -18'sd630;
b1[64] = 18'sd630;
b1[65] = 18'sd1236;
b1[66] = 18'sd982;
b1[67] = 18'sd206;
b1[68] = -18'sd519;
b1[69] = -18'sd772;
b1[70] = -18'sd503;
b1[71] = 18'sd9;
b1[72] = 18'sd398;
b1[73] = 18'sd448;
b1[74] = 18'sd205;
b1[75] = -18'sd109;
b1[76] = -18'sd276;
b1[77] = -18'sd218;
b1[78] = -18'sd26;
b1[79] = 18'sd139;
b1[80] = 18'sd164;
b1[81] = 18'sd61;
b1[82] = -18'sd70;
b1[83] = -18'sd125;
b1[84] = -18'sd71;
b1[85] = 18'sd36;
b1[86] = 18'sd107;
b1[87] = 18'sd89;
b1[88] = 18'sd2;
b1[89] = -18'sd84;
b1[90] = -18'sd104;
b1[91] = -18'sd46;
b1[92] = 18'sd42;
b1[93] = 18'sd95;
b1[94] = 18'sd77;
b1[95] = 18'sd6;
b1[96] = -18'sd63;
b1[97] = -18'sd82;
b1[98] = -18'sd42;
b1[99] = 18'sd23;
b1[100] = 18'sd64;
b1[101] = 18'sd55;
b1[102] = 18'sd7;
b1[103] = -18'sd39;
b1[104] = -18'sd51;
b2[0] = -18'sd17;
b2[1] = -18'sd13;
b2[2] = 18'sd2;
b2[3] = 18'sd18;
b2[4] = 18'sd21;
b2[5] = 18'sd8;
b2[6] = -18'sd14;
b2[7] = -18'sd27;
b2[8] = -18'sd21;
b2[9] = 18'sd2;
b2[10] = 18'sd26;
b2[11] = 18'sd32;
b2[12] = 18'sd14;
b2[13] = -18'sd15;
b2[14] = -18'sd35;
b2[15] = -18'sd28;
b2[16] = 18'sd1;
b2[17] = 18'sd30;
b2[18] = 18'sd36;
b2[19] = 18'sd12;
b2[20] = -18'sd24;
b2[21] = -18'sd42;
b2[22] = -18'sd23;
b2[23] = 18'sd20;
b2[24] = 18'sd55;
b2[25] = 18'sd46;
b2[26] = -18'sd9;
b2[27] = -18'sd73;
b2[28] = -18'sd92;
b2[29] = -18'sd36;
b2[30] = 18'sd68;
b2[31] = 18'sd149;
b2[32] = 18'sd133;
b2[33] = 18'sd3;
b2[34] = -18'sd168;
b2[35] = -18'sd257;
b2[36] = -18'sd173;
b2[37] = 18'sd69;
b2[38] = 18'sd327;
b2[39] = 18'sd412;
b2[40] = 18'sd210;
b2[41] = -18'sd210;
b2[42] = -18'sd599;
b2[43] = -18'sd659;
b2[44] = -18'sd239;
b2[45] = 18'sd517;
b2[46] = 18'sd1177;
b2[47] = 18'sd1206;
b2[48] = 18'sd258;
b2[49] = -18'sd1594;
b2[50] = -18'sd3818;
b2[51] = -18'sd5625;
b2[52] = -18'sd6320;
b2[53] = -18'sd5625;
b2[54] = -18'sd3818;
b2[55] = -18'sd1594;
b2[56] = 18'sd258;
b2[57] = 18'sd1206;
b2[58] = 18'sd1177;
b2[59] = 18'sd517;
b2[60] = -18'sd239;
b2[61] = -18'sd659;
b2[62] = -18'sd599;
b2[63] = -18'sd210;
b2[64] = 18'sd210;
b2[65] = 18'sd412;
b2[66] = 18'sd327;
b2[67] = 18'sd69;
b2[68] = -18'sd173;
b2[69] = -18'sd257;
b2[70] = -18'sd168;
b2[71] = 18'sd3;
b2[72] = 18'sd133;
b2[73] = 18'sd149;
b2[74] = 18'sd68;
b2[75] = -18'sd36;
b2[76] = -18'sd92;
b2[77] = -18'sd73;
b2[78] = -18'sd9;
b2[79] = 18'sd46;
b2[80] = 18'sd55;
b2[81] = 18'sd20;
b2[82] = -18'sd23;
b2[83] = -18'sd42;
b2[84] = -18'sd24;
b2[85] = 18'sd12;
b2[86] = 18'sd36;
b2[87] = 18'sd30;
b2[88] = 18'sd1;
b2[89] = -18'sd28;
b2[90] = -18'sd35;
b2[91] = -18'sd15;
b2[92] = 18'sd14;
b2[93] = 18'sd32;
b2[94] = 18'sd26;
b2[95] = 18'sd2;
b2[96] = -18'sd21;
b2[97] = -18'sd27;
b2[98] = -18'sd14;
b2[99] = 18'sd8;
b2[100] = 18'sd21;
b2[101] = 18'sd18;
b2[102] = 18'sd2;
b2[103] = -18'sd13;
b2[104] = -18'sd17;
*/
			end
endcase
			

endmodule 